{"version":3,"sources":["components/BasalRate_Component.js","components/Daily_Component.js","components/Fetch_Component.js","App.js","reportWebVitals.js","index.js"],"names":["BasalRate","props","useState","bmr","setBmr","name","setName","calc","gender","document","querySelector","value","age","getElementById","height","weight","userName","Math","round","getBmr","getName","action","id","type","placeholder","className","onClick","DailyComponent","breakfast","lunch","dinner","snacks","mealData","meal","push","arrBreakfast","map","item","food","toUpperCase","cal","unit","arrLunch","arrDinner","arrSnacks","FetchComponent","calorie","setCalorie","fat","setFat","carbs","setCarbs","protein","setProtein","fiber","setFiber","ingr","setIngr","dropdownValue","setDropdownValue","setAlldata","show","setShow","api","bmrFromChild","preventShow","nameFromChild","DropdownButton","title","onSelect","e","Dropdown","Item","eventKey","onKeyPress","key","fetch","then","response","status","console","log","json","data","parsed","nutrients","ENERC_KCAL","FAT","CHOCDF","PROCNT","FIBTG","text","catch","err","FetchData","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yNAoEeA,EAhEG,SAACC,GAAW,IAAD,EAEHC,mBAAS,IAFN,mBAElBC,EAFkB,KAEbC,EAFa,OAGDF,mBAAS,IAHR,mBAGlBG,EAHkB,KAGZC,EAHY,KAcnBC,EAAO,WACT,IAAMC,EAASC,SAASC,cAAc,mBAAmBC,MACnDC,EAAMH,SAASI,eAAe,OAAOF,MACrCG,EAASL,SAASI,eAAe,UAAUF,MAC3CI,EAASN,SAASI,eAAe,UAAUF,MAC3CK,EAAWP,SAASI,eAAe,YAAYF,MAElDP,EADY,SAAXI,EACMS,KAAKC,MAAM,KAAQ,MAAQH,EAAW,KAAOD,EAAW,KAAOF,GAE/DK,KAAKC,MAAM,MAAS,KAAOH,EAAW,KAAOD,EAAW,KAAOF,IAEzEN,EAAQU,GAnBRf,EAAMkB,OAAOhB,GAIbF,EAAMmB,QAAQf,IA4BlB,OACI,mCACA,gCACI,2DACA,uBAAMgB,OAAO,GAAb,UACI,8BACI,uBAAOC,GAAG,WAAWC,KAAK,OAAOC,YAAY,gBAEjD,sBAAKF,GAAG,aAAR,UACI,uBAAOC,KAAK,QAAQE,UAAU,SAASpB,KAAK,SAASM,MAAM,SAD/D,OAEI,uBAAOY,KAAK,QAAQE,UAAU,SAASpB,KAAK,SAASM,MAAM,WAF/D,YAIA,sBAAKW,GAAG,gBAAR,UACI,uBAAOC,KAAK,SAASD,GAAG,MAAME,YAAY,QAC1C,uBAAOD,KAAK,SAASD,GAAG,SAASE,YAAY,gBAC7C,uBAAOD,KAAK,SAASD,GAAG,SAASE,YAAY,sBAGrD,wBAAQD,KAAK,SAASG,QAAS,WAC3BnB,KADJ,0B,QCwEGoB,EAlIQ,SAAC1B,GAEpB,IAAI2B,EAAY,GACZC,EAAQ,GACRC,EAAS,GACTC,EAAS,GAIT,OADO9B,EAAM+B,SAAS,GAAGC,MAErB,IAAK,YACDL,EAAUM,KAAV,MAAAN,EAAS,YAAS3B,EAAM+B,WAC5B,MACA,IAAK,QACDH,EAAMK,KAAN,MAAAL,EAAK,YAAS5B,EAAM+B,WACxB,MACA,IAAK,SACDF,EAAOI,KAAP,MAAAJ,EAAM,YAAS7B,EAAM+B,WACzB,MACA,IAAK,QACDD,EAAOG,KAAP,MAAAH,EAAM,YAAS9B,EAAM+B,WAGlC,IAAMG,EAAeP,EAAUQ,KAAI,SAAAC,GAC9B,OAAO,sBAAKZ,UAAU,YAAf,UAA2B,8BAAK,8BAAMY,EAAKC,KAAKC,kBAA0B,gCAAK,iCAAOF,EAAKG,IAAZ,WAA4B,iCAAOH,EAAKI,KAAZ,iBAGhHC,EAAWb,EAAMO,KAAI,SAAAC,GACvB,OAAO,sBAAKZ,UAAU,YAAf,UAA2B,8BAAK,8BAAMY,EAAKC,KAAKC,kBAA0B,gCAAK,iCAAOF,EAAKG,IAAZ,WAA4B,+BAAOH,EAAKI,gBAG5HE,EAAYb,EAAOM,KAAI,SAAAC,GACzB,OAAO,sBAAKZ,UAAU,YAAf,UAA2B,8BAAK,8BAAMY,EAAKC,KAAKC,kBAA0B,gCAAK,iCAAOF,EAAKG,IAAZ,WAA4B,+BAAOH,EAAKI,gBAG5HG,EAAYb,EAAOK,KAAI,SAAAC,GACzB,OAAO,sBAAKZ,UAAU,YAAf,UAA2B,8BAAK,8BAAMY,EAAKC,KAAKC,kBAA0B,gCAAK,iCAAOF,EAAKG,IAAZ,WAA4B,+BAAOH,EAAKI,gBAGlI,OACI,gCACA,sBAAKnB,GAAG,gBAAR,UACQ,sBAAKA,GAAG,YAAR,UACI,sBAAKG,UAAU,aAAf,UACI,8BACI,6CAEJ,gCACI,2CACA,8CAGPU,KAEL,sBAAKb,GAAG,QAAR,UACI,sBAAKG,UAAU,aAAf,UACI,8BACI,yCAEJ,gCACI,2CACA,8CAGPiB,KAEL,sBAAKpB,GAAG,SAAR,UACI,sBAAKG,UAAU,aAAf,UACI,8BACI,0CAEJ,gCACI,2CACA,8CAGPkB,KAEL,sBAAKrB,GAAG,SAAR,UACI,sBAAKG,UAAU,aAAf,UACI,8BACI,0CAEJ,gCACI,2CACA,8CAGPmB,QAGb,sBAAKtB,GAAG,aAAR,UACQ,+CACA,sBAAKA,GAAG,iBAAR,UACI,sBAAKG,UAAU,YAAf,UACI,gCACI,4CACA,gDAEJ,gCACI,yCACA,2CAEJ,gCACI,2CACA,8CAGR,sBAAKA,UAAU,aAAf,UACI,gCACI,uCACA,2CAEJ,gCACI,yCACA,iDAIZ,sBAAKH,GAAG,WAAR,UAEI,qGACA,oG,gBCTLuB,G,MA3GQ,WAAM,MAGK3C,mBAAS,IAHd,mBAGlB4C,EAHkB,KAGTC,EAHS,OAIH7C,mBAAS,IAJN,mBAIlB8C,EAJkB,KAIbC,EAJa,OAKC/C,mBAAS,IALV,mBAKlBgD,EALkB,KAKXC,EALW,OAMKjD,mBAAS,IANd,mBAMlBkD,EANkB,KAMTC,EANS,OAOCnD,mBAAS,IAPV,mBAOlBoD,EAPkB,KAOXC,EAPW,OAQDrD,mBAAS,IARR,mBAQlBsD,EARkB,KAQZC,EARY,OASiBvD,mBAAS,eAT1B,mBASlBwD,EATkB,KASHC,EATG,OAUKzD,mBAAS,IAVd,mBAUT0D,GAVS,aAWH1D,mBAAS,IAXN,mBAWlBC,EAXkB,KAWbC,EAXa,OAYDF,mBAAS,IAZR,mBAYlBG,EAZkB,KAYZC,EAZY,OAaDJ,oBAAS,GAbR,mBAalB2D,EAbkB,KAaZC,EAbY,KAiBvBC,EACQ,2DADRA,EAEE,WAFFA,EAGG,mCAoDH/B,EAAW,GAIb,OAHJA,EAASE,KAAK,CAAC,KAAQwB,EAAc,KAAQF,EAAK,IAAOV,EACzD,KAAQ,IAAK,IAAOE,EAAK,MAASE,EAAO,MAAQI,EAAO,QAAWF,IAG3D,mCACCS,EACD,qBAAKvC,GAAG,YAAR,SAAoB,cAAC,EAAD,CAAWH,OAnBhB,SAAC6C,GACpB5D,EAAO4D,GACPF,GAAQ,SAAAG,GACJ,OAAQA,MAgB+C7C,QAZ1C,SAAC8C,GAClB5D,EAAQ4D,QAYJ,sBAAK5C,GAAG,WAAR,UACA,eAAC6C,EAAA,EAAD,CAAgB7C,GAAG,wBAAwBG,UAAU,cAAc2C,MAAOV,EAAeW,SA1BjF,SAACC,GACbX,EAAiBW,IAyBb,UACA,cAACC,EAAA,EAASC,KAAV,CAAeC,SAAS,YAAxB,uBACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,QAAxB,mBACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,SAAxB,oBACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,QAAxB,sBAEA,uBAAOlD,KAAK,OAAOC,YAAY,cAAcF,GAAG,WAAWG,UAAU,aAAaiD,WAzCzE,SAACJ,GACd,GAAc,UAAVA,EAAEK,IAGN,OA1Bc,SAACnB,GACfoB,MAAM,GAAD,OAAIb,GAAJ,OAAkBP,EAAlB,mBAAiCO,EAAjC,oBAAmDA,IAAWc,MAAK,SAAAC,GAC7C,MAApBA,EAASC,QACRC,QAAQC,IAAR,qCAA0CH,EAASC,SAEvDD,EAASI,OAAOL,MAAK,SAAAM,GACjBvB,EAAWuB,EAAKC,OAAO,GAAG9C,KAAK+C,WAC/BtC,EAAWoC,EAAKC,OAAO,GAAG9C,KAAK+C,UAAUC,YACzCrC,EAAOkC,EAAKC,OAAO,GAAG9C,KAAK+C,UAAUE,KACrCpC,EAASgC,EAAKC,OAAO,GAAG9C,KAAK+C,UAAUG,QACvCnC,EAAW8B,EAAKC,OAAO,GAAG9C,KAAK+C,UAAUI,QACzClC,EAAS4B,EAAKC,OAAO,GAAG9C,KAAK+C,UAAUK,OACvCjC,EAAQ0B,EAAKQ,SAGhBC,OAAM,SAAAC,GACHb,QAAQC,IAAR,gBAAqBY,UAS7BC,CADYrF,SAASI,eAAe,YAAYF,OAEzCF,SAASI,eAAe,YAAYF,SAsCvC,wBAAQW,GAAG,YAAX,iBACA,cAAC,EAAD,CACAU,SAAYA,EACZwB,KAAMA,EACNV,QAASA,EACTE,IAAKA,EACLE,MAAOA,EACPE,QAASA,EACTE,MAAOA,EACPnD,IAAKA,EACLE,KAAMA,WC7FC0F,MAVf,WAGE,OACA,8BACA,cAAC,EAAD,OCIaC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjG,SAASI,eAAe,SAM1BmF,M","file":"static/js/main.029e706e.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\n\n\nconst BasalRate = (props) => {\n\n    const [bmr, setBmr] = useState(\"\");\n    const [name, setName] = useState(\"\");\n\n    const sendBmr = () => {\n        props.getBmr(bmr);  \n    }\n\n    const sendName = () => {\n        props.getName(name)\n    }\n    \n    \n    const calc = () => {\n        const gender = document.querySelector('.gender:checked').value;\n        const age = document.getElementById(\"age\").value;\n        const height = document.getElementById(\"height\").value;\n        const weight = document.getElementById(\"weight\").value;\n        const userName = document.getElementById(\"userName\").value;\n        if (gender === \"male\") {\n           setBmr(Math.round(66.5 + (13.75 * weight) + (5.03 * height) - (6.75 * age)));\n        } else {\n           setBmr(Math.round(655.1 + (9.56 * weight) + (1.85 * height) - (4.68 * age)));   \n        }\n        setName(userName);\n        sendBmr(bmr);\n        sendName(name);\n    }\n\n    \n    // useEffect(() => {\n    //     sendBmr(bmr);\n    //     sendName(name);\n    // })\n\n    \n\n    return (\n        <>\n        <div>\n            <h5>Please Fill in All Fields</h5>\n            <form action=\"\">\n                <div>\n                    <input id=\"userName\" type=\"text\" placeholder=\"Your Name\"/>\n                </div>\n                <div id=\"genderPick\">\n                    <input type=\"radio\" className=\"gender\" name=\"gender\" value=\"male\"/>Male\n                    <input type=\"radio\" className=\"gender\" name=\"gender\" value=\"female\"/>Female\n                </div>\n                <div id=\"userVariables\">\n                    <input type=\"number\" id=\"age\" placeholder=\"Age\"/>\n                    <input type=\"number\" id=\"height\" placeholder=\"Height (cm)\"/>\n                    <input type=\"number\" id=\"weight\" placeholder=\"Weight (kg)\"/>\n                </div>\n            </form>\n            <button type=\"button\" onClick={()=>{\n                calc();\n            }}>Submit</button>\n        </div>\n        </>\n    )\n}\n\nexport default BasalRate","import Accordion from 'react-bootstrap/Accordion';\r\n\r\nconst DailyComponent = (props) => {\r\n    \r\n    let breakfast = [];\r\n    let lunch = [];\r\n    let dinner = [];\r\n    let snacks = [];\r\n\r\n\r\n    let time = props.mealData[0].meal;\r\n        switch (time) {\r\n            case \"Breakfast\":\r\n                breakfast.push(...props.mealData);\r\n            break;\r\n            case \"Lunch\":\r\n                lunch.push(...props.mealData);\r\n            break;  \r\n            case \"Dinner\":\r\n                dinner.push(...props.mealData);\r\n            break;   \r\n            case \"Snack\":\r\n                snacks.push(...props.mealData);\r\n    }\r\n\r\n   const arrBreakfast = breakfast.map(item => {\r\n        return <div className=\"dailyData\"><div><div>{item.food.toUpperCase()}</div></div><div><span>{item.cal}kkcal</span><span>{item.unit}gr</span></div></div>\r\n   })\r\n\r\n    const arrLunch = lunch.map(item => {\r\n        return <div className=\"dailyData\"><div><div>{item.food.toUpperCase()}</div></div><div><span>{item.cal}kkcal</span><span>{item.unit}</span></div></div>\r\n    })\r\n\r\n    const arrDinner = dinner.map(item => {\r\n        return <div className=\"dailyData\"><div><div>{item.food.toUpperCase()}</div></div><div><span>{item.cal}kkcal</span><span>{item.unit}</span></div></div>\r\n    })\r\n\r\n    const arrSnacks = snacks.map(item => {\r\n        return <div className=\"dailyData\"><div><div>{item.food.toUpperCase()}</div></div><div><span>{item.cal}kkcal</span><span>{item.unit}</span></div></div>\r\n    })\r\n    \r\n    return(\r\n        <div>\r\n        <div id=\"dailyDataArea\">\r\n                <div id=\"breakfast\">\r\n                    <div className=\"mealsTitle\">\r\n                        <div>\r\n                            <h5>Breakfast</h5>\r\n                        </div>\r\n                        <div>\r\n                            <span>Calorie</span>\r\n                            <span>Unit</span>\r\n                        </div>\r\n                    </div>\r\n                    {arrBreakfast}\r\n                </div>\r\n                <div id=\"lunch\">\r\n                    <div className=\"mealsTitle\">\r\n                        <div>\r\n                            <h5>Lunch</h5>\r\n                        </div>\r\n                        <div>\r\n                            <span>Calorie</span>\r\n                            <span>Unit</span>\r\n                        </div>\r\n                    </div>\r\n                    {arrLunch}\r\n                </div> \r\n                <div id=\"dinner\">\r\n                    <div className=\"mealsTitle\">\r\n                        <div>\r\n                            <h5>Dinner</h5>\r\n                        </div>\r\n                        <div>\r\n                            <span>Calorie</span>\r\n                            <span>Unit</span>\r\n                        </div>\r\n                    </div>\r\n                    {arrDinner}\r\n                </div>\r\n                <div id=\"snacks\">\r\n                    <div className=\"mealsTitle\">\r\n                        <div>\r\n                            <h5>Snacks</h5>\r\n                        </div>\r\n                        <div>\r\n                            <span>Calorie</span>\r\n                            <span>Unit</span>\r\n                        </div>\r\n                    </div>\r\n                    {arrSnacks}\r\n                </div>\r\n        </div>\r\n        <div id=\"totalDaily\">\r\n                <h5>Daily Intakes</h5>\r\n                <div id=\"totalValueArea\">\r\n                    <div className=\"firstLine\">\r\n                        <div>\r\n                            <span>Calories</span>\r\n                            <span>2000kkcal</span>\r\n                        </div>\r\n                        <div>\r\n                            <span>Carbs</span>\r\n                            <span>30gr</span>\r\n                        </div>\r\n                        <div>\r\n                            <span>Protein</span>\r\n                            <span>40gr</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"secondline\">\r\n                        <div>\r\n                            <span>Fat</span>\r\n                            <span>50gr</span>\r\n                        </div>\r\n                        <div>\r\n                            <span>Fibre</span>\r\n                            <span>32gr</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"infoArea\">\r\n                {/* {(props.name).toUpperCase()} */}\r\n                    <span>DODO! Based on your basal metabolic rate, you need 352kkcal more.</span>\r\n                    <span>(Your Approximate Basal Metabolic Rate is 1986Cal/Day)</span>\r\n                    {/* {props.bmr} */}\r\n                </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DailyComponent","import React, {useState} from 'react';\r\nimport BasalRate from './BasalRate_Component';\r\nimport DailyComponent from './Daily_Component';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst FetchComponent = () => {\r\n\r\n    // Variables\r\n    const [calorie, setCalorie] = useState(\"\");\r\n    const [fat, setFat] = useState(\"\");\r\n    const [carbs, setCarbs] = useState(\"\");\r\n    const [protein, setProtein] = useState(\"\");\r\n    const [fiber, setFiber] = useState(\"\");\r\n    const [ingr, setIngr] = useState(\"\");\r\n    const [dropdownValue, setDropdownValue] = useState(\"Select Meal\");\r\n    const [allData, setAlldata] = useState(\"\");\r\n    const [bmr, setBmr] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [show, setShow] = useState(true)\r\n\r\n\r\n// API URl and KEY\r\nconst api = {\r\n    mainUrl : \"https://api.edamam.com/api/food-database/v2/parser?ingr=\",\r\n    id: \"7b389745\",\r\n    key: \"9ce7819e554a95d61e2b57cb2f9b8014\"\r\n}\r\n\r\n// Fetch API\r\nconst FetchData = (ingr) => {\r\n    fetch(`${api.mainUrl}${ingr}&app_id=${api.id}&app_key=${api.key}`).then(response => {\r\n        if(response.status !== 200){\r\n            console.log(`Houston! We have a problem ${response.status}`)\r\n        }\r\n        response.json().then(data => {\r\n            setAlldata(data.parsed[0].food.nutrients);\r\n            setCalorie(data.parsed[0].food.nutrients.ENERC_KCAL);\r\n            setFat(data.parsed[0].food.nutrients.FAT);\r\n            setCarbs(data.parsed[0].food.nutrients.CHOCDF);\r\n            setProtein(data.parsed[0].food.nutrients.PROCNT);\r\n            setFiber(data.parsed[0].food.nutrients.FIBTG);\r\n            setIngr(data.text);\r\n\r\n        })\r\n        .catch(err => {\r\n            console.log(`error ${err}`)\r\n        })\r\n    })\r\n}\r\n\r\n// Enter to Submit\r\nconst keyEnter = (e) => {\r\n    if (e.key === 'Enter') {\r\n    let value = document.getElementById(\"foodName\").value;\r\n    FetchData(value);\r\n    return document.getElementById(\"foodName\").value; \r\n    }\r\n}\r\n\r\n// Get Dropdown Value\r\nconst GetName = (e) => {\r\n    setDropdownValue(e)\r\n}\r\n\r\n//Callback function\r\nconst handleCallback = (bmrFromChild) => {\r\n    setBmr(bmrFromChild);\r\n    setShow(preventShow => {\r\n        return !preventShow\r\n    })\r\n}\r\n\r\nconst nameCallback = (nameFromChild) => {\r\n    setName(nameFromChild)\r\n}\r\n\r\n// Collect Data for Daily Component\r\nconst mealData = [];\r\nmealData.push({'meal': dropdownValue,'food': ingr,'cal': calorie,\r\n'unit': \"1\", 'fat': fat, 'carbs': carbs, 'fiber':fiber, 'protein': protein});\r\n\r\n    return (\r\n        <>\r\n        {show ?\r\n        <div id=\"basalRate\"><BasalRate getBmr={handleCallback} getName={nameCallback}/></div> :\r\n        <div id=\"mainBody\">\r\n        <DropdownButton id=\"dropdown-basic-button\" className=\"mealButtons\" title={dropdownValue} onSelect={GetName}>\r\n        <Dropdown.Item eventKey=\"Breakfast\" >Breakfast</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"Lunch\">Lunch</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"Dinner\">Dinner</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"Snack\">Snack</Dropdown.Item>\r\n        </DropdownButton>\r\n        <input type=\"text\" placeholder=\"Search Food\" id=\"foodName\" className=\"foodSearch\" onKeyPress={keyEnter}/>\r\n        <button id=\"addButton\">Add</button>\r\n        <DailyComponent\r\n        mealData = {mealData}\r\n        ingr={ingr}\r\n        calorie={calorie}\r\n        fat={fat}\r\n        carbs={carbs}\r\n        protein={protein}\r\n        fiber={fiber}\r\n        bmr={bmr}\r\n        name={name}\r\n        />\r\n        </div>\r\n        }\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default FetchComponent;","import './css/main.css'\nimport FetchComponent from './components/Fetch_Component';\n\nfunction App() {\n\n\n  return(\n  <div>\n  <FetchComponent/>\n  </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}